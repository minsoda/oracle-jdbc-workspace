-- *** 삭제 순서
--TB_RENT
--TB_MEMBER
--TB_BOOK
--TB_PUBLISHER
 DROP TABLE TB_PUBLISHER; -- 참조하고 있어서 참조하고 있는 것을 먼저 삭제를 해야 함
 
 CREATE TABLE TB_PUBLISHER (
 PUB_NO NUMBER PRIMARY KEY,
 PUB_NAME VARCHAR2(20)NOT NULL,
 PHONE VARCHAR2(13)
-- CONSTRAINT TB_PUBLISHER_PUB_NO_PK PRIMARY KEY(PUB_NO) 보통 아래에 기재함
 );
 
 COMMENT ON COLUMN TB_PUBLISHER.PUB_NO IS '출판사 번호';
 COMMENT ON COLUMN TB_PUBLISHER.PUB_NAME IS '출판사명';
 COMMENT ON COLUMN TB_PUBLISHER.PHONE IS '출판사 전화번호';
 
  INSERT INTO TB_PUBLISHER VALUES(1, '인사이트', '02-1111-2222');
  INSERT INTO TB_PUBLISHER VALUES(2, '제이펍', '02-3333-4444');
  INSERT INTO TB_PUBLISHER VALUES(3, '한빛미디어', '02-5555-6666');
  
  SELECT * FROM TB_PUBLISHER;

 DROP TABLE TB_BOOK;
 
 CREATE TABLE TB_BOOK (
 BK_NO NUMBER PRIMARY KEY,
 BK_TITLE VARCHAR2(50) NOT NULL,
 BK_AUTHOR VARCHAR2(30) NOT NULL,
 BK_PRICE NUMBER,
 BK_PUB_NO NUMBER REFERENCES TB_PUBLISHER ON DELETE CASCADE
-- CONSTRAINT TB_BOOK_BK_NO_PK PRIMARY KEY(BK_NO)
-- CONSTRAINT TB_BOOK_BK_PUB_NO REFERENCES TB_PUBLISHER ON DELETE CASCADE
 );
 
 COMMENT ON COLUMN TB_BOOK.BK_NO IS '도서번호';
 COMMENT ON COLUMN TB_BOOK.BK_TITLE IS '도서명';
 COMMENT ON COLUMN TB_BOOK.BK_AUTHOR IS '저자명';
 COMMENT ON COLUMN TB_BOOK.BK_PRICE IS '가격';
 COMMENT ON COLUMN TB_BOOK.BK_PUB_NO IS '출판사 번호';
 
 INSERT INTO TB_BOOK VALUES(1, '프로그래머 열정을 말하다', '채드 파울러', '12600', '1');
 INSERT INTO TB_BOOK VALUES(2, '1일 1로그 100일 완성 IT 자식', '브라이언', '18000', '1');  
 INSERT INTO TB_BOOK VALUES(3, '인스파이어드', '마티 케이건', '21600', '2');  
 INSERT INTO TB_BOOK VALUES(4, '혼자 공부하는 얄팍한 코딩 지식', '고현민', '16200', '3'); 
 INSERT INTO TB_BOOK VALUES(5, '함께 자라기', '김창준', '11700', '1'); 
 
 SELECT * FROM TB_BOOK;
 
 DROP TABLE TB_MEMBER;
 CREATE TABLE TB_MEMBER (
 MEMBER_NO NUMBER PRIMARY KEY , --기본키
 MEMBER_ID VARCHAR2(20) UNIQUE, 
 MEMBER_PWD VARCHAR2(20) NOT NULL,
 MEMBER_NAME VARCHAR2(10) NOT NULL, 
 GENDER CHAR(3) CHECK(GENDER IN('M', 'F')),
 ADDRESS VARCHAR2(50),
 PHONE VARCHAR2(15),
 SATATUS CHAR(3) DEFAULT 'N' CHECK(SATATUS IN ('N','Y')),
 ENROLL_DATE DATE DEFAULT SYSDATE NOT NULL
-- CONSTRAINT TB_MEMBER_MEMBER_NO_PK PRIMARY KEY(MEMBER_NO)
 );
 
  COMMENT ON COLUMN TB_MEMBER.MEMBER_NO IS '회원번호';
  COMMENT ON COLUMN TB_MEMBER.MEMBER_ID IS '아이디';
  COMMENT ON COLUMN TB_MEMBER.MEMBER_PWD IS '비밀번호';
  COMMENT ON COLUMN TB_MEMBER.MEMBER_NAME IS '회원명';
  COMMENT ON COLUMN TB_MEMBER.GENDER IS '성별';
  COMMENT ON COLUMN TB_MEMBER.ADDRESS IS '주소';
  COMMENT ON COLUMN TB_MEMBER.PHONE IS '연락처';
  COMMENT ON COLUMN TB_MEMBER.SATATUS IS '탈퇴 여부';
  COMMENT ON COLUMN TB_MEMBER.ENROLL_DATE IS '가입일';
 
 INSERT INTO TB_MEMBER VALUES(1, 'USER1', '1234', '유병재', 'M', '서울시 강남구', '010-1111-2222', 'N', SYSDATE);
 INSERT INTO TB_MEMBER VALUES(2, 'USER2', '1234', '김동현', 'M', '서울시 강남구', '010-3333-4444', 'N', SYSDATE);
 INSERT INTO TB_MEMBER VALUES(3, 'USER3', '1234', '강호동', 'F', '서울시 강남구', '010-5555-6666', 'N', SYSDATE);
 
 SELECT * FROM TB_MEMBER;
 
 
 CREATE TABLE TB_RENT (
 RENT_NO NUMBER PRIMARY KEY,--기본키
 RENT_MEM_NO NUMBER REFERENCES TB_MEMBER ON DELETE SET NULL,
 RENT_BOOK_NO NUMBER REFERENCES TB_BOOK ON DELETE SET NULL,
 RENT_DATE DATE DEFAULT SYSDATE 
-- CONSTRAINT TB_BENT_RENT_NO_PK PRIMARY KEY(RENT_NO)
-- CONSTRAINT TB_BENT_RENT_NO_FK FOREIGN KEY(RENT_NO)REFERENCES TO_MEMBER ON DELETE SET NULL,
-- CONSTRAINT TB_BENT_BOOK_NO_FK FOREIGN KEY(BOOK_NO)REFERENCES TO_BOOK ON DELETE SET NULL
 );
 
 COMMENT ON COLUMN TB_RENT.RENT_NO IS '대여번호';
 COMMENT ON COLUMN TB_RENT.RENT_MEM_NO IS '대여 회원번호'; 
 COMMENT ON COLUMN TB_RENT.RENT_BOOK_NO IS '대여 도서번호'; 
 COMMENT ON COLUMN TB_RENT.RENT_DATE IS '대여일'; 
 
 INSERT INTO TB_RENT VALUES(1, 1, 2, SYSDATE);
 INSERT INTO TB_RENT VALUES(2, 1, 3, SYSDATE);
 INSERT INTO TB_RENT VALUES(3, 2, 1, SYSDATE);
 INSERT INTO TB_RENT VALUES(4, 2, 2, SYSDATE);
 INSERT INTO TB_RENT VALUES(5, 1, 5, SYSDATE);
 
 SELECT * FROM TB_RENT;
 
 SELECT MEMBER_NAME, MEMBER_ID, RENT_BOOK_NO, RENT_DATE, TR.RENT_DATE+7 -- DATE 타입일 경우 바로 계산 가능
 FROM TB_MEMBER M
 JOIN TB_RENT TR ON (M.MEMBER_NO = TR.RENT_MEM_NO)
 WHERE RENT_BOOK_NO = 2;
 
 SELECT BK_TITLE, PUB_NAME, RENT_DATE, TR.RENT_DATE+7
 FROM TB_BOOK B
 JOIN TB_PUBLISHER P ON (B.BK_PUB_NO = P.PUB_NO)
 JOIN TB_RENT TR ON (B.BK_NO = TR.RENT_BOOK_NO)
 WHERE TR.RENT_MEM_NO = 1;
 